{"version":3,"sources":["Assets/Images/9620660.jpg","Components/HideOnScroll/HideOnScroll.tsx","Components/CustomAppBar/CustomAppBar.tsx","Components/Summary/Summary.tsx","Components/Skills/Skills.tsx","Components/Portfolio/Portfolio.tsx","Components/Contact/Contact.tsx","Components/SocialMedia/SocialMedia.tsx","Components/Main/MainComponent.tsx","Pages/Main/Main.tsx","serviceWorker.js","i18n/index.ts","index.js"],"names":["module","exports","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","CustomAppBar","AppBar","Toolbar","Typography","variant","useStyles","makeStyles","theme","createStyles","large","width","spacing","height","container","margin","cardData","padding","Summary","classes","t","useTranslation","Paper","className","Card","CardHeader","avatar","Avatar","alt","src","leandro","title","subheader","elevation","Box","CardContent","Skills","Portfolio","Contact","SocialMedia","MainComponent","Fragment","CssBaseline","Main","Boolean","location","hostname","match","resources","en","translation","es","fr","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a8f2fbb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/9620660.041f9af8.jpg\";","import React from 'react'\r\nimport { useScrollTrigger, Slide } from '@material-ui/core';\r\nimport { BasicRenderType } from '../../Types/common';\r\n\r\nconst HideOnScroll = (props: BasicRenderType)=>{\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n  \r\n    return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    );\r\n}\r\n\r\nexport default HideOnScroll","import * as React from 'react';\r\nimport HideOnScroll from '../HideOnScroll/HideOnScroll';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\n\r\nconst CustomAppBar = () =>{\r\n  return (\r\n    <HideOnScroll>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\">Scroll to Hide App Bar</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n    </HideOnScroll>\r\n  );\r\n}\r\n\r\nexport default CustomAppBar;","import * as React from 'react';\r\nimport { Paper, Card, CardHeader, CardContent, Typography, Avatar, Box} from '@material-ui/core';\r\nimport leandro from '../../Assets/Images/9620660.jpg'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst Summary = () => {\r\n  const classes = useStyles();\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <Paper className={classes.container}>\r\n        <Card>\r\n            <CardHeader avatar={<Avatar className={classes.large} alt='Leandro Laiño' src={leandro}/>} title='' subheader={<Paper className={classes.cardData} elevation={3}><Box>{'Leandro Javier Laiño '}</Box>{  t('birthday')}</Paper>}/>\r\n            <CardContent>\r\n                <Typography>\r\n                    {t('summary')}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n    container:{\r\n        margin:5,\r\n    },\r\n    cardData:{\r\n        padding:10,\r\n    }\r\n  }),\r\n);\r\n\r\nexport default Summary;\r\n","import * as React from 'react';\r\nimport { Paper, makeStyles, Theme, createStyles } from '@material-ui/core';\r\n\r\n\r\nexport function Skills () {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.container}>\r\n        {'SKILLS / TECHNOLOGIES'}      \r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container:{\r\n        margin:5,\r\n    }\r\n  }),\r\n);\r\n","import * as React from 'react';\r\nimport { Paper, makeStyles, Theme, createStyles } from '@material-ui/core';\r\n\r\nexport function Portfolio () {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.container}>\r\n      {'PORTFOLIO'}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container:{\r\n        margin:5,\r\n    }\r\n  }),\r\n);\r\n","import * as React from 'react';\r\nimport { Paper, makeStyles, Theme, createStyles } from '@material-ui/core';\r\n\r\n\r\nexport function Contact () {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.container}>\r\n      {'CONTACT'}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container:{\r\n        margin:5,\r\n    }\r\n  }),\r\n);\r\n","import * as React from 'react';\r\nimport { Paper, makeStyles, Theme, createStyles } from '@material-ui/core';\r\n\r\nexport function SocialMedia () {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.container}>\r\n      {'SOCIAL MEDIA'}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container:{\r\n        margin:5,\r\n    }\r\n  }),\r\n);\r\n","import React from 'react';\r\nimport {CssBaseline, Toolbar} from '@material-ui/core';\r\nimport CustomAppBar from '../CustomAppBar/CustomAppBar';\r\nimport Summary from '../Summary/Summary';\r\nimport { Skills } from '../Skills/Skills';\r\nimport { Portfolio } from '../Portfolio/Portfolio';\r\nimport { Contact } from '../Contact/Contact';\r\nimport { SocialMedia } from '../SocialMedia/SocialMedia';\r\n\r\nconst MainComponent =()=>{\r\n    return(\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <CustomAppBar/>\r\n        <Toolbar/>\r\n        <Summary/>\r\n        <Skills/>\r\n        <Portfolio/>\r\n        <Contact/>\r\n        <SocialMedia/>\r\n    </React.Fragment>)  \r\n}\r\n\r\nexport default MainComponent","import React from 'react';\r\nimport MainComponent  from '../../Components/Main/MainComponent'\r\n\r\nconst Main =()=>{\r\n    return(<MainComponent/>)\r\n}\r\n\r\nexport default Main","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport en from './en.json';\r\nimport es from './es.json';\r\nimport fr from './fr.json';\r\n\r\nconst resources = {\r\n    en:{\r\n        translation:en,\r\n    },\r\n    es:{\r\n        translation:es,\r\n    },\r\n    fr:{\r\n        translation:fr,\r\n    }\r\n}\r\n\r\ni18n.use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        lng: 'en',\r\n        keySeparator: false,\r\n        interpolation: { escapeValue: false},\r\n    })\r\n\r\nexport default i18n;","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Pages/Main/Main'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Main />\r\n    </Suspense>\r\n    <Main />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}